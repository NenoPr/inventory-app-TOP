extends ../layout

block content
  h1= title
  form(method='POST' action='')
    div.form-group
      label(for='title') Title:
      input#title.form-control(type='text', placeholder='Name of the game' name='title' required='true' value=(undefined===game ? '' : game.title) )
    div.form-group
      label(for='developer') Developer:
      select#developer.form-control(type='select' placeholder='Select Developer' name='developer' required='true' )
        //- - developers.sort(function(a, b) {let textA = a.name.toUpperCase(); let textB = b.name.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
        for developer in developers
          if game
            //- Handle GET form, where game.developer is an object, and POST form, where it is a string.
            option(
              value=developer._id
              selected=(
                developer._id.toString()==game.developer._id
                || developer._id.toString()==game.developer
              ) ? 'selected' : false
            ) #{developer.name}
          else
            option(value=developer._id) #{developer.name}
    div.form-group
      label(for='publisher') Publisher:
      select#publisher.form-control(type='select' placeholder='Select Publisher' name='publisher' required='true' )
        //- - publishers.sort(function(a, b) {let textA = a.name.toUpperCase(); let textB = b.name.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
        for publisher in publishers
          if game
            //- Handle GET form, where book.author is an object, and POST form, where it is a string.
            option(
              value=publisher._id
              selected=(
                publisher._id.toString()==game.publisher._id
                || publisher._id.toString()==game.publisher
              ) ? 'selected' : false
            ) #{publisher.name}
          else
            option(value=publisher._id) #{publisher.name}
    div.form-group
      label(for='platform') Platform:
      select#platform.form-control(type='select' placeholder='Select Platform' name='platform' required='true' )
        //- - platform.sort(function(a, b) {let textA = a.name.toUpperCase(); let textB = b.name.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
        for platform in platforms
          if game
            //- Handle GET form, where book.author is an object, and POST form, where it is a string.
            option(
              value=platform._id
              selected=(
                platform._id.toString()==game.platform._id
                || platform._id.toString()==game.platform
              ) ? 'selected' : false
            ) #{platform.name}
          else
            option(value=platform._id) #{platform.name}
    div.form-group
      label Genre:
      div
        for genre in genres
          div(style='display: inline; padding-right:10px;')
            input.checkbox-input(type='checkbox', name='genre', id=genre._id, value=genre._id, checked=genre.checked )
            label(for=genre._id) #{genre.name}
    div.form-group
      label(for='summary') Summary:
      textarea#summary.form-control(type='textarea', placeholder='Summary' name='summary' required='true') #{undefined===game ? '' : game.summary}
    div.form-group
      label(for='announced') Announced:
      input#announced.form-control(type='date', placeholder='DD/MM/YYYY' name='announced' value=(undefined===game ? '' : game.announced) required='true')
    div.form-group
      label(for='release') Release Date:
      input#release.form-control(type='date', placeholder='DD/MM/YYYY' name='release' value=(undefined===game ? '' : game.release_date) required='true')
    div.form-group
      label(for='price') Price:
      input#price.form-control(type='text', placeholder='$' name='price' value=(undefined===game ? '' : game.price) required='true')
    div.form-group
      label(for='stock') Stock:
      input#stock.form-control(type='text', placeholder='N' name='stock' value=(undefined===game ? '' : game.stock) required='true')
    div.form-group
      label(for='coverImage') Cover Image:
      input#coverImage.form-control(type='text', placeholder='Link' name='coverImage' value=(undefined===game ? '' : game.coverImage) required='true')
    div.form-group
      label(for='images-array') Images:
      input#images-array.form-control(type='text', placeholder='Link...' name='coverImage' value=(undefined===game ? '' : game.coverImage) required='true')
      div.images-array-holder
      button(type="button").images-array-add Add Image To Array 
    button.btn.btn-primary(type='submit') Submit

  if errors
    ul
      for error in errors
        li!= error.msg